{
  "$defs": {
    "AirflowBasicAuthBackendModel": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "const": "basic_auth",
          "title": "Type",
          "type": "string"
        },
        "webserver_url": {
          "description": "The URL of the Airflow webserver.",
          "title": "Webserver Url",
          "type": "string"
        },
        "username": {
          "description": "The username to use for basic authentication.",
          "title": "Username",
          "type": "string"
        },
        "password": {
          "description": "The password to use for basic authentication.",
          "title": "Password",
          "type": "string"
        }
      },
      "required": [
        "type",
        "webserver_url",
        "username",
        "password"
      ],
      "title": "AirflowBasicAuthBackendModel",
      "type": "object"
    },
    "AirflowDagModel": {
      "additionalProperties": false,
      "properties": {
        "dag_id": {
          "description": "The ID of the DAG.",
          "title": "Dag Id",
          "type": "string"
        },
        "asset_specs": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/AssetAttributesModel"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Asset specs to optionally associate with this DAG.",
          "title": "Asset Specs"
        },
        "task_mappings": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/AirflowTaskModel"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Asset specs to optionally associate with each task within the DAG.",
          "title": "Task Mappings"
        }
      },
      "required": [
        "dag_id"
      ],
      "title": "AirflowDagModel",
      "type": "object"
    },
    "AirflowDagSelectionModel": {
      "additionalProperties": false,
      "properties": {
        "dag_ids": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A subselection of DAG ids to load from the Airflow instance.",
          "title": "Dag Ids"
        }
      },
      "title": "AirflowDagSelectionModel",
      "type": "object"
    },
    "AirflowInstanceComponent": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "const": "dagster_components.dagster_airlift.AirflowInstanceComponent",
          "default": "dagster_components.dagster_airlift.AirflowInstanceComponent",
          "title": "Type",
          "type": "string"
        },
        "attributes": {
          "$ref": "#/$defs/AirflowInstanceModel",
          "default": null
        }
      },
      "title": "AirflowInstanceComponent",
      "type": "object"
    },
    "AirflowInstanceModel": {
      "additionalProperties": false,
      "properties": {
        "auth": {
          "anyOf": [
            {
              "$ref": "#/$defs/AirflowBasicAuthBackendModel"
            },
            {
              "$ref": "#/$defs/AirflowMwaaAuthBackendModel"
            }
          ],
          "description": "The authentication backend to use for the Airflow instance.",
          "title": "Auth"
        },
        "name": {
          "description": "A unique name for the Airflow instance.",
          "title": "Name",
          "type": "string"
        },
        "dags_to_load": {
          "anyOf": [
            {
              "$ref": "#/$defs/AirflowDagSelectionModel"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A subselection of DAG ids to load from the Airflow instance. Defaults to loading all DAGs."
        },
        "asset_post_processors": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/AssetPostProcessorModel"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Post-processing attributes to apply to the assets.",
          "title": "Asset Post Processors"
        },
        "dag_mappings": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/AirflowDagModel"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Asset specs to optionally associate with each DAG or task within the Airflow instance.",
          "title": "Dag Mappings"
        }
      },
      "required": [
        "auth",
        "name"
      ],
      "title": "AirflowInstanceModel",
      "type": "object"
    },
    "AirflowMwaaAuthBackendModel": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "const": "mwaa",
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "AirflowMwaaAuthBackendModel",
      "type": "object"
    },
    "AirflowTaskModel": {
      "additionalProperties": false,
      "properties": {
        "task_id": {
          "description": "The ID of the task.",
          "title": "Task Id",
          "type": "string"
        },
        "asset_specs": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/AssetAttributesModel"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Asset specs to optionally associate with this task.",
          "title": "Asset Specs"
        }
      },
      "required": [
        "task_id"
      ],
      "title": "AirflowTaskModel",
      "type": "object"
    },
    "AssetAttributesModel": {
      "additionalProperties": false,
      "description": "Resolves into a dictionary of asset attributes. This is similar to AssetSpecSchema, but\ndoes not require a key. This is useful in contexts where you want to modify attributes of\nan existing AssetSpec.",
      "properties": {
        "deps": {
          "description": "The asset keys for the upstream assets that this asset depends on.",
          "examples": [
            [
              "my_database/my_schema/upstream_table"
            ]
          ],
          "items": {
            "type": "string"
          },
          "title": "Deps",
          "type": "array"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Human-readable description of the asset.",
          "examples": [
            "Refined sales data"
          ],
          "title": "Description"
        },
        "metadata": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ],
          "description": "Additional metadata for the asset.",
          "title": "Metadata"
        },
        "group_name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Used to organize assets into groups, defaults to 'default'.",
          "examples": [
            "staging"
          ],
          "title": "Group Name"
        },
        "skippable": {
          "default": false,
          "description": "Whether this asset can be omitted during materialization, causing downstream dependencies to skip.",
          "title": "Skippable",
          "type": "boolean"
        },
        "code_version": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A version representing the code that produced the asset. Increment this value when the code changes.",
          "examples": [
            "3"
          ],
          "title": "Code Version"
        },
        "owners": {
          "description": "A list of strings representing owners of the asset. Each string can be a user's email address, or a team name prefixed with `team:`, e.g. `team:finops`.",
          "examples": [
            [
              "team:analytics",
              "nelson@hooli.com"
            ]
          ],
          "items": {
            "type": "string"
          },
          "title": "Owners",
          "type": "array"
        },
        "tags": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          ],
          "description": "Tags for filtering and organizing.",
          "examples": [
            {
              "team": "analytics",
              "tier": "prod"
            }
          ],
          "title": "Tags"
        },
        "kinds": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A list of strings representing the kinds of the asset. These will be made visible in the Dagster UI.",
          "examples": [
            [
              "snowflake"
            ]
          ],
          "title": "Kinds"
        },
        "automation_condition": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The condition under which the asset will be automatically materialized.",
          "title": "Automation Condition"
        },
        "key": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A unique identifier for the asset.",
          "title": "Key"
        }
      },
      "title": "AssetAttributesModel",
      "type": "object"
    },
    "AssetPostProcessorModel": {
      "additionalProperties": false,
      "properties": {
        "target": {
          "default": "*",
          "title": "Target",
          "type": "string"
        },
        "operation": {
          "default": "merge",
          "enum": [
            "merge",
            "replace"
          ],
          "title": "Operation",
          "type": "string"
        },
        "attributes": {
          "$ref": "#/$defs/AssetAttributesModel"
        }
      },
      "required": [
        "attributes"
      ],
      "title": "AssetPostProcessorModel",
      "type": "object"
    },
    "AssetSpecModel": {
      "additionalProperties": false,
      "properties": {
        "deps": {
          "description": "The asset keys for the upstream assets that this asset depends on.",
          "examples": [
            [
              "my_database/my_schema/upstream_table"
            ]
          ],
          "items": {
            "type": "string"
          },
          "title": "Deps",
          "type": "array"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Human-readable description of the asset.",
          "examples": [
            "Refined sales data"
          ],
          "title": "Description"
        },
        "metadata": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ],
          "description": "Additional metadata for the asset.",
          "title": "Metadata"
        },
        "group_name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Used to organize assets into groups, defaults to 'default'.",
          "examples": [
            "staging"
          ],
          "title": "Group Name"
        },
        "skippable": {
          "default": false,
          "description": "Whether this asset can be omitted during materialization, causing downstream dependencies to skip.",
          "title": "Skippable",
          "type": "boolean"
        },
        "code_version": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A version representing the code that produced the asset. Increment this value when the code changes.",
          "examples": [
            "3"
          ],
          "title": "Code Version"
        },
        "owners": {
          "description": "A list of strings representing owners of the asset. Each string can be a user's email address, or a team name prefixed with `team:`, e.g. `team:finops`.",
          "examples": [
            [
              "team:analytics",
              "nelson@hooli.com"
            ]
          ],
          "items": {
            "type": "string"
          },
          "title": "Owners",
          "type": "array"
        },
        "tags": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          ],
          "description": "Tags for filtering and organizing.",
          "examples": [
            {
              "team": "analytics",
              "tier": "prod"
            }
          ],
          "title": "Tags"
        },
        "kinds": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A list of strings representing the kinds of the asset. These will be made visible in the Dagster UI.",
          "examples": [
            [
              "snowflake"
            ]
          ],
          "title": "Kinds"
        },
        "automation_condition": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The condition under which the asset will be automatically materialized.",
          "title": "Automation Condition"
        },
        "key": {
          "description": "A unique identifier for the asset.",
          "title": "Key",
          "type": "string"
        }
      },
      "required": [
        "key"
      ],
      "title": "AssetSpecModel",
      "type": "object"
    },
    "PipesSubprocessScriptCollectionComponent": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "const": "dagster_components.dagster.PipesSubprocessScriptCollectionComponent",
          "default": "dagster_components.dagster.PipesSubprocessScriptCollectionComponent",
          "title": "Type",
          "type": "string"
        },
        "attributes": {
          "$ref": "#/$defs/PipesSubprocessScriptCollectionModel",
          "default": null
        }
      },
      "title": "PipesSubprocessScriptCollectionComponent",
      "type": "object"
    },
    "PipesSubprocessScriptCollectionModel": {
      "additionalProperties": false,
      "properties": {
        "scripts": {
          "items": {
            "$ref": "#/$defs/PipesSubprocessScriptModel"
          },
          "title": "Scripts",
          "type": "array"
        }
      },
      "required": [
        "scripts"
      ],
      "title": "PipesSubprocessScriptCollectionModel",
      "type": "object"
    },
    "PipesSubprocessScriptModel": {
      "additionalProperties": false,
      "properties": {
        "path": {
          "title": "Path",
          "type": "string"
        },
        "assets": {
          "items": {
            "$ref": "#/$defs/AssetSpecModel"
          },
          "title": "Assets",
          "type": "array"
        }
      },
      "required": [
        "path",
        "assets"
      ],
      "title": "PipesSubprocessScriptModel",
      "type": "object"
    },
    "dagster_components__cli__list__DefinitionsComponent": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "const": "dagster_components.dagster.DefinitionsComponent",
          "default": "dagster_components.dagster.DefinitionsComponent",
          "title": "Type",
          "type": "string"
        },
        "attributes": {
          "$ref": "#/$defs/dagster_components__components__definitions_component__component__DefinitionsComponent",
          "default": null
        }
      },
      "title": "DefinitionsComponent",
      "type": "object"
    },
    "dagster_components__components__definitions_component__component__DefinitionsComponent": {
      "additionalProperties": false,
      "description": "Wraps an arbitrary set of Dagster definitions.",
      "properties": {
        "definitions_path": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Relative path to a file containing Dagster definitions.",
          "title": "Definitions Path"
        }
      },
      "title": "DefinitionsComponent",
      "type": "object"
    }
  },
  "anyOf": [
    {
      "$ref": "#/$defs/dagster_components__cli__list__DefinitionsComponent"
    },
    {
      "$ref": "#/$defs/PipesSubprocessScriptCollectionComponent"
    },
    {
      "$ref": "#/$defs/AirflowInstanceComponent"
    }
  ]
}